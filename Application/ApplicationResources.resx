<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConcurrencyFailure" xml:space="preserve">
    <value>Ошибка оптимистичного параллелизма, объект был изменен</value>
  </data>
  <data name="CreationError" xml:space="preserve">
    <value>Возникли ошибки во время создания записи</value>
  </data>
  <data name="DataExist" xml:space="preserve">
    <value>Такие данные уже существуют</value>
  </data>
  <data name="DateGreaterValidation" xml:space="preserve">
    <value>Дата должна быть позже 1900 года</value>
  </data>
  <data name="DefaultError" xml:space="preserve">
    <value>Произошла неизвестная ошибка</value>
  </data>
  <data name="DeleteError" xml:space="preserve">
    <value>Возникли ошибки при удалении записи</value>
  </data>
  <data name="DuplicateEmail" xml:space="preserve">
    <value>Электронная почта {0} уже занята</value>
  </data>
  <data name="DuplicateRoleName" xml:space="preserve">
    <value>Роль {0} уже занята</value>
  </data>
  <data name="DuplicateUserName" xml:space="preserve">
    <value>Имя пользователя {0} уже занято</value>
  </data>
  <data name="EditError" xml:space="preserve">
    <value>Возникли ошибки во время изменения записи</value>
  </data>
  <data name="ExternalServiceError" xml:space="preserve">
    <value>Ошибка внешнего веб сервиса</value>
  </data>
  <data name="FairDateGreaterThen" xml:space="preserve">
    <value>Дата увольнения не может быть раньше даты назначения</value>
  </data>
  <data name="FieldGreaterOrEqualValidation" xml:space="preserve">
    <value>Значение должно быть больше либо равным {0}</value>
  </data>
  <data name="FieldGreaterValidation" xml:space="preserve">
    <value>Значение должно быть больше {0}</value>
  </data>
  <data name="FieldLessOrEqualValidation" xml:space="preserve">
    <value>Значение должно быть меньше либо равным {0}</value>
  </data>
  <data name="FieldLessValidation" xml:space="preserve">
    <value>Значение должно быть меньше {0}</value>
  </data>
  <data name="FieldRangeValidation" xml:space="preserve">
    <value>Значение должно находится в диапозоне {0} - {1}</value>
  </data>
  <data name="FieldRequiredValidation" xml:space="preserve">
    <value>Поле является обязательным к заполнению</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Электронная почта {0} недействительна</value>
  </data>
  <data name="InvalidRoleName" xml:space="preserve">
    <value>Имя роли {0} недействительно</value>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>Неверный токен</value>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>Имя пользователя {0} недействительно, может содержать только буквы или цифры</value>
  </data>
  <data name="ListRequired" xml:space="preserve">
    <value>Список не должен быть пустым</value>
  </data>
  <data name="LoginAlreadyAssociated" xml:space="preserve">
    <value>Пользователь с таким логином существует</value>
  </data>
  <data name="LoginError" xml:space="preserve">
    <value>Не удалось зайти под этим акаунтом</value>
  </data>
  <data name="MatchNumbers" xml:space="preserve">
    <value>Поле должно содержать только цифры</value>
  </data>
  <data name="MaxLengthValidation" xml:space="preserve">
    <value>Значение не должно превышать {0} символов</value>
  </data>
  <data name="MinimumLengthValidation" xml:space="preserve">
    <value>Значение не должно быть меньше {0} символов</value>
  </data>
  <data name="PasswordConfirm" xml:space="preserve">
    <value>Пароли должны совпадать</value>
  </data>
  <data name="PasswordMismatch" xml:space="preserve">
    <value>Неправильный старый пароль</value>
  </data>
  <data name="PasswordRequiresDigit" xml:space="preserve">
    <value>Пароли должны состоять как минимум из одной цифры («0» - «9»)</value>
  </data>
  <data name="PasswordRequiresLower" xml:space="preserve">
    <value>Пароли должны содержать хотя бы одну строчную букву («a» - «z»)</value>
  </data>
  <data name="PasswordRequiresNonAlphanumeric" xml:space="preserve">
    <value>Пароли должны содержать хотя бы один не буквенно-цифровой символ</value>
  </data>
  <data name="PasswordRequiresUpper" xml:space="preserve">
    <value>В пароле должна быть хотя бы одна заглавная буква ("A" - "Z")</value>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>Пароли должны содержать не менее {0} символов</value>
  </data>
  <data name="PINDataNotFound" xml:space="preserve">
    <value>Нет данных по этому ПИН</value>
  </data>
  <data name="PINNotFound" xml:space="preserve">
    <value>Такого ИНН не существует!</value>
  </data>
  <data name="RecordNotFoundError" xml:space="preserve">
    <value>Запись не найдена</value>
  </data>
  <data name="RootOrganizationName" xml:space="preserve">
    <value>Министерство труда и социального развития (МТСР)</value>
  </data>
  <data name="UserAlreadyHasPassword" xml:space="preserve">
    <value>У пользователя уже установлен пароль</value>
  </data>
  <data name="UserAlreadyInRole" xml:space="preserve">
    <value>Пользователь уже в роли {0}</value>
  </data>
  <data name="UserLockoutNotEnabled" xml:space="preserve">
    <value>Блокировка отключена для этого пользователя</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>Сотрудник не найден</value>
  </data>
  <data name="UserNotInRole" xml:space="preserve">
    <value>Пользователь не находится в роли {0}</value>
  </data>
</root>